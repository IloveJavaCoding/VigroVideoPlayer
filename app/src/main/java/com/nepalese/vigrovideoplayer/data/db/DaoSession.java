package com.nepalese.vigrovideoplayer.data.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.nepalese.vigrovideoplayer.data.bean.DownloadItem;
import com.nepalese.vigrovideoplayer.data.bean.LiveSource;
import com.nepalese.vigrovideoplayer.data.bean.Video;

import com.nepalese.vigrovideoplayer.data.db.DownloadItemDao;
import com.nepalese.vigrovideoplayer.data.db.LiveSourceDao;
import com.nepalese.vigrovideoplayer.data.db.VideoDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig downloadItemDaoConfig;
    private final DaoConfig liveSourceDaoConfig;
    private final DaoConfig videoDaoConfig;

    private final DownloadItemDao downloadItemDao;
    private final LiveSourceDao liveSourceDao;
    private final VideoDao videoDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        downloadItemDaoConfig = daoConfigMap.get(DownloadItemDao.class).clone();
        downloadItemDaoConfig.initIdentityScope(type);

        liveSourceDaoConfig = daoConfigMap.get(LiveSourceDao.class).clone();
        liveSourceDaoConfig.initIdentityScope(type);

        videoDaoConfig = daoConfigMap.get(VideoDao.class).clone();
        videoDaoConfig.initIdentityScope(type);

        downloadItemDao = new DownloadItemDao(downloadItemDaoConfig, this);
        liveSourceDao = new LiveSourceDao(liveSourceDaoConfig, this);
        videoDao = new VideoDao(videoDaoConfig, this);

        registerDao(DownloadItem.class, downloadItemDao);
        registerDao(LiveSource.class, liveSourceDao);
        registerDao(Video.class, videoDao);
    }
    
    public void clear() {
        downloadItemDaoConfig.clearIdentityScope();
        liveSourceDaoConfig.clearIdentityScope();
        videoDaoConfig.clearIdentityScope();
    }

    public DownloadItemDao getDownloadItemDao() {
        return downloadItemDao;
    }

    public LiveSourceDao getLiveSourceDao() {
        return liveSourceDao;
    }

    public VideoDao getVideoDao() {
        return videoDao;
    }

}
